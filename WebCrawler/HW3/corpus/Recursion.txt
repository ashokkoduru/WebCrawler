<div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="en"><div class="hatnote" role="note">For other uses, see <a class="mw-disambig" href="/wiki/Recursion_(disambiguation)" title="Recursion (disambiguation)">Recursion (disambiguation)</a>.</div>


<p><b>Recursion</b> occurs when a thing is defined in terms of itself or of its type. Recursion is used in a variety of disciplines ranging from <a href="/wiki/Linguistics" title="Linguistics">linguistics</a> to <a href="/wiki/Logic" title="Logic">logic</a>. The most common application of recursion is in <a href="/wiki/Mathematics" title="Mathematics">mathematics</a> and <a href="/wiki/Computer_science" title="Computer science">computer science</a>, where a <a href="/wiki/Function_(mathematics)" title="Function (mathematics)">function</a> being defined is applied within its own definition. While this apparently defines an infinite number of instances (function values), it is often done in such a way that no loop or infinite chain of references can occur.</p>
<p>The term is also used more generally to describe a process of repeating objects in a self-similar way. For instance, when the surfaces of two mirrors are exactly parallel with each other, the nested images that occur are a form of infinite recursion.</p>
<p></p>

<p></p>
<h2><span class="mw-headline" id="Formal_definitions">Formal definitions</span></h2>

<p>In <a href="/wiki/Mathematics" title="Mathematics">mathematics</a> and <a href="/wiki/Computer_science" title="Computer science">computer science</a>, a class of objects or methods exhibit recursive behavior when they can be defined by two properties:</p>
<ol>
<li><span id="base_case"></span>A simple <b>base case</b> (or cases)—a terminating scenario that does not use recursion to produce an answer</li>
<li>A set of rules that reduce all other cases toward the base case</li>
</ol>
<p>For example, the following is a recursive definition of a person's ancestors:</p>
<ul>
<li>One's <a href="/wiki/Parent" title="Parent">parents</a> are one's <a href="/wiki/Ancestor" title="Ancestor">ancestors</a> (<i>base case</i>).</li>
<li>The ancestors of one's ancestors are also one's ancestors (<i>recursion step</i>).</li>
</ul>
<p>The <a class="mw-redirect" href="/wiki/Fibonacci_sequence" title="Fibonacci sequence">Fibonacci sequence</a> is a classic example of recursion:</p>
<p><span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mrow class="MJX-TeXAtom-ORD">
<mtext>Fib</mtext>
</mrow>
<mo stretchy="false">(</mo>
<mn>0</mn>
<mo stretchy="false">)</mo>
<mo>=</mo>
<mn>0</mn>
<mrow class="MJX-TeXAtom-ORD">
<mtext> as base case 1,</mtext>
</mrow>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle {\text{Fib}}(0)=0{\text{ as base case 1,}}}</annotation>
</semantics>
</math></span><img alt="\text{Fib}(0)=0\text{ as base case 1,}" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/31a3ac9621fb67482cc66f1e2b370dede4fdb08d" style="vertical-align: -0.838ex; width:25.657ex; height:2.843ex;"/></span></p>
<p><span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mrow class="MJX-TeXAtom-ORD">
<mtext>Fib</mtext>
</mrow>
<mo stretchy="false">(</mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
<mo>=</mo>
<mn>1</mn>
<mrow class="MJX-TeXAtom-ORD">
<mtext> as base case 2,</mtext>
</mrow>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle {\text{Fib}}(1)=1{\text{ as base case 2,}}}</annotation>
</semantics>
</math></span><img alt="\text{Fib}(1)=1\text{ as base case 2,}" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/195ade62ee6aa7c8fdc0424ad64a61588e3e9010" style="vertical-align: -0.838ex; width:25.657ex; height:2.843ex;"/></span></p>
<p><span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mrow class="MJX-TeXAtom-ORD">
<mtext>For all integers </mtext>
</mrow>
<mi>n</mi>
<mo>&gt;</mo>
<mn>1</mn>
<mo>,</mo>
<mtext> </mtext>
<mrow class="MJX-TeXAtom-ORD">
<mtext> Fib</mtext>
</mrow>
<mo stretchy="false">(</mo>
<mi>n</mi>
<mo stretchy="false">)</mo>
<mo>:=</mo>
<mrow class="MJX-TeXAtom-ORD">
<mtext>Fib</mtext>
</mrow>
<mo stretchy="false">(</mo>
<mi>n</mi>
<mo>−<!-- − --></mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
<mo>+</mo>
<mrow class="MJX-TeXAtom-ORD">
<mtext>Fib</mtext>
</mrow>
<mo stretchy="false">(</mo>
<mi>n</mi>
<mo>−<!-- − --></mo>
<mn>2</mn>
<mo stretchy="false">)</mo>
<mo>.</mo>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle {\text{For all integers }}n&gt;1,~{\text{ Fib}}(n):={\text{Fib}}(n-1)+{\text{Fib}}(n-2).}</annotation>
</semantics>
</math></span><img alt="\text{For all integers }n&gt;1,~\text{ Fib}(n):=\text{Fib}(n-1) + \text{Fib}(n-2)." aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/393d2f04e03a78c68e518b4f17a7c88a286782a8" style="vertical-align: -0.838ex; width:59.222ex; height:2.843ex;"/></span></p>
<p>Many mathematical axioms are based upon recursive rules. For example, the formal definition of the <a href="/wiki/Natural_number" title="Natural number">natural numbers</a> by the <a href="/wiki/Peano_axioms" title="Peano axioms">Peano axioms</a> can be described as: <i>0 is a natural number, and each natural number has a successor, which is also a natural number.</i> By this base case and recursive rule, one can generate the set of all natural numbers.</p>
<p>Recursively defined mathematical objects include <a href="/wiki/Function_(mathematics)" title="Function (mathematics)">functions</a>, <a href="/wiki/Set_(mathematics)" title="Set (mathematics)">sets</a>, and especially <a href="/wiki/Fractal" title="Fractal">fractals</a>.</p>
<p>There are various more tongue-in-cheek "definitions" of recursion; see <a href="#Recursive_humor">recursive humor</a>.</p>
<h2><span class="mw-headline" id="Informal_definition">Informal definition</span></h2>

<p>Recursion is the process a procedure goes through when one of the steps of the procedure involves invoking the procedure itself. A procedure that goes through recursion is said to be 'recursive'.</p>
<p>To understand recursion, one must recognize the distinction between a procedure and the running of a procedure. A procedure is a set of steps based on a set of rules. The running of a procedure involves actually following the rules and performing the steps. An analogy: a procedure is like a written recipe; running a procedure is like actually preparing the meal.</p>
<p>Recursion is related to, but not the same as, a reference within the specification of a procedure to the execution of some other procedure. For instance, a recipe might refer to cooking vegetables, which is another procedure that in turn requires heating water, and so forth. However, a recursive procedure is where (at least) one of its steps calls for a new instance of the very same procedure, like a <a href="/wiki/Sourdough" title="Sourdough">sourdough</a> recipe calling for some dough left over from the last time the same recipe was made. This of course immediately creates the possibility of an endless loop; recursion can only be properly used in a definition if the step in question is skipped in certain cases so that the procedure can complete, like a sourdough recipe that also tells you how to get some starter dough in case you've never made it before. Even if properly defined, a recursive procedure is not easy for humans to perform, as it requires distinguishing the new from the old (partially executed) invocation of the procedure; this requires some administration of how far various simultaneous instances of the procedures have progressed. For this reason recursive definitions are very rare in everyday situations. An example could be the following procedure to find a way through a <a href="/wiki/Maze" title="Maze">maze</a>. Proceed forward until reaching either an exit or a branching point (a dead end is considered a branching point with 0 branches). If the point reached is an exit, terminate. Otherwise try each branch in turn, using the procedure recursively; if every trial fails by reaching only dead ends, return on the path that led to this branching point and report failure. Whether this actually defines a terminating procedure depends on the nature of the maze: it must not allow loops. In any case, executing the procedure requires carefully recording all currently explored branching points, and which of their branches have already been exhaustively tried.</p>
<h2><span class="mw-headline" id="In_language">In language</span></h2>
<p>Linguist <a href="/wiki/Noam_Chomsky" title="Noam Chomsky">Noam Chomsky</a> among many others has argued that the lack of an upper bound on the number of grammatical sentences in a language, and the lack of an upper bound on grammatical sentence length (beyond practical constraints such as the time available to utter one), can be explained as the consequence of recursion in natural language. This can be understood in terms of a recursive definition of a syntactic category, such as a sentence. A sentence can have a structure in which what follows the verb is another sentence: <i>Dorothy thinks witches are dangerous</i>, in which the sentence <i>witches are dangerous</i> occurs in the larger one. So a sentence can be defined recursively (very roughly) as something with a structure that includes a noun phrase, a verb, and optionally another sentence. This is really just a special case of the mathematical definition of recursion.</p>
<p>This provides a way of understanding the creativity of language—the unbounded number of grammatical sentences—because it immediately predicts that sentences can be of arbitrary length: <i>Dorothy thinks that Toto suspects that Tin Man said that...</i>. Of course, there are many structures apart from sentences that can be defined recursively, and therefore many ways in which a sentence can embed instances of one category inside another. Over the years, languages in general have proved amenable to this kind of analysis.</p>
<p>Recently, however, the generally-accepted idea that recursion is an essential property of human language has been challenged by <a href="/wiki/Daniel_Everett" title="Daniel Everett">Daniel Everett</a> on the basis of his claims about the <a href="/wiki/Pirah%C3%A3_language" title="Pirahã language">Pirahã language</a>. Andrew Nevins, David Pesetsky and Cilene Rodrigues are among many who that have argued against this. Literary <a href="/wiki/Self-reference" title="Self-reference">self-reference</a> can in any case be argued to be different in kind from mathematical or logical recursion.</p>
<p>Recursion plays a crucial role not only in syntax, but also in natural language semantics. The word <i>and</i>, for example, can be construed as a function that can apply to sentence meanings to create new sentences, and likewise for noun phrase meanings, verb phrase meanings, and others. It can also apply to intransitive verbs, transitive verbs, or ditransitive verbs. In order to provide a single denotation for it that is suitably flexible, <i>and</i> is typically defined so that it can take any of these different types of meanings as arguments. This can be done by defining it for a simple case in which it combines sentences, and then defining the other cases recursively in terms of the simple one.</p>
<h3><span class="mw-headline" id="Recursive_humor">Recursive humor</span></h3>
<p>Recursion is sometimes used humorously in computer science, programming, philosophy, or mathematics textbooks, generally by giving a <a href="/wiki/Circular_definition" title="Circular definition">circular definition</a> or <a href="/wiki/Self-reference" title="Self-reference">self-reference</a>, in which the putative recursive step does not get closer to a base case, but instead leads to an <a href="/wiki/Infinite_regress" title="Infinite regress">infinite regress</a>. It is not unusual for such books to include a joke entry in their <a href="/wiki/Glossary" title="Glossary">glossary</a> along the lines of:</p>

<p>A variation is found on page 269 in the <a class="mw-redirect" href="/wiki/Back-of-the-book_index" title="Back-of-the-book index">index</a> of some editions of <a href="/wiki/Brian_Kernighan" title="Brian Kernighan">Brian Kernighan</a> and <a href="/wiki/Dennis_Ritchie" title="Dennis Ritchie">Dennis Ritchie</a>'s book <i><a class="mw-redirect" href="/wiki/The_C_Programming_Language_(book)" title="The C Programming Language (book)">The C Programming Language</a></i>; the index entry recursively references itself ("recursion 86, 139, 141, 182, 202, 269"). The earliest version of this joke was in "Software Tools" by Kernighan and Plauger, and also appears in "The UNIX Programming Environment" by Kernighan and Pike. It did not appear in the first edition of <i>The C Programming Language</i>.</p>
<p>Another joke is that "To understand recursion, you must understand recursion." In the English-language version of the <a href="/wiki/Google" title="Google">Google</a> web search engine, when a search for "recursion" is made, the site suggests "Did you mean: <i>recursion</i>." An alternative form is the following, from <a href="/wiki/Andrew_Plotkin" title="Andrew Plotkin">Andrew Plotkin</a>: <i>"If you already know what recursion is, just remember the answer. Otherwise, find someone who is standing closer to <a href="/wiki/Douglas_Hofstadter" title="Douglas Hofstadter">Douglas Hofstadter</a> than you are; then ask him or her what recursion is."</i></p>
<p><a href="/wiki/Recursive_acronym" title="Recursive acronym">Recursive acronyms</a> can also be examples of recursive humor. <a href="/wiki/PHP" title="PHP">PHP</a>, for example, stands for "PHP Hypertext Preprocessor", <a href="/wiki/Wine_(software)" title="Wine (software)">WINE</a> stands for "WINE Is Not an Emulator." and <a href="/wiki/GNU_Project" title="GNU Project">GNU</a> stands for "GNU's not Unix".</p>
<h2><span class="mw-headline" id="In_mathematics">In mathematics</span></h2>

<h3><span class="mw-headline" id="Recursively_defined_sets">Recursively defined sets</span></h3>
<div class="hatnote" role="note">Main article: <a href="/wiki/Recursive_definition" title="Recursive definition">Recursive definition</a></div>
<h4><span class="mw-headline" id="Example:_the_natural_numbers">Example: the natural numbers</span></h4>
<div class="hatnote" role="note">See also: <a href="/wiki/Closure_(mathematics)" title="Closure (mathematics)">Closure (mathematics)</a></div>
<p>The canonical example of a recursively defined set is given by the <a class="mw-redirect" href="/wiki/Natural_numbers" title="Natural numbers">natural numbers</a>:</p>

<h4><span class="mw-headline" id="Example:_The_set_of_true_reachable_propositions">Example: The set of true reachable propositions</span></h4>
<p>Another interesting example is the set of all "true reachable" propositions in an <a href="/wiki/Axiomatic_system" title="Axiomatic system">axiomatic system</a>.</p>
<ul>
<li>If a proposition is an axiom, it is a true reachable proposition.</li>
<li>If a proposition can be obtained from true reachable propositions by means of inference rules, it is a true reachable proposition.</li>
<li>The set of true reachable propositions is the smallest set of propositions satisfying these conditions.</li>
</ul>
<p>This set is called 'true reachable propositions' because in non-constructive approaches to the foundations of mathematics, the set of true propositions may be larger than the set recursively constructed from the axioms and rules of inference. See also <a href="/wiki/G%C3%B6del%27s_incompleteness_theorems" title="Gödel's incompleteness theorems">Gödel's incompleteness theorems</a>.</p>
<h3><span class="mw-headline" id="Finite_subdivision_rules">Finite subdivision rules</span></h3>
<div class="hatnote" role="note">Main article: <a href="/wiki/Finite_subdivision_rule" title="Finite subdivision rule">Finite subdivision rule</a></div>
<p>Finite subdivision rules are a geometric form of recursion, which can be used to create <a href="/wiki/Fractal" title="Fractal">fractal</a>-like images. A subdivision rule starts with a collection of polygons labelled by finitely many labels, and then each polygon is subdivided into smaller labelled polygons in a way that depends only on the labels of the original polygon. This process can be iterated. The standard `middle thirds' technique for creating the <a href="/wiki/Cantor_set" title="Cantor set">Cantor set</a> is a subdivision rule, as is <a href="/wiki/Barycentric_subdivision" title="Barycentric subdivision">barycentric subdivision</a>.</p>
<h3><span class="mw-headline" id="Functional_recursion">Functional recursion</span></h3>
<p>A <a href="/wiki/Function_(mathematics)" title="Function (mathematics)">function</a> may be partly defined in terms of itself. A familiar example is the <a href="/wiki/Fibonacci_number" title="Fibonacci number">Fibonacci number</a> sequence: <i>F</i>(<i>n</i>) = <i>F</i>(<i>n</i> − 1) + <i>F</i>(<i>n</i> − 2). For such a definition to be useful, it must lead to non-recursively defined values, in this case <i>F</i>(0) = 0 and <i>F</i>(1) = 1.</p>
<p>A famous recursive function is the <a href="/wiki/Ackermann_function" title="Ackermann function">Ackermann function</a>, which—unlike the Fibonacci sequence—cannot easily be expressed without recursion.</p>
<h3><span class="mw-headline" id="Proofs_involving_recursive_definitions">Proofs involving recursive definitions</span></h3>
<p>Applying the standard technique of <a class="mw-redirect" href="/wiki/Proof_by_cases" title="Proof by cases">proof by cases</a> to recursively defined sets or functions, as in the preceding sections, yields <a href="/wiki/Structural_induction" title="Structural induction">structural induction</a>, a powerful generalization of <a href="/wiki/Mathematical_induction" title="Mathematical induction">mathematical induction</a> widely used to derive proofs in <a href="/wiki/Mathematical_logic" title="Mathematical logic">mathematical logic</a> and <a href="/wiki/Computer_science" title="Computer science">computer science</a>.</p>
<h3><span class="mw-headline" id="Recursive_optimization">Recursive optimization</span></h3>
<p><a href="/wiki/Dynamic_programming" title="Dynamic programming">Dynamic programming</a> is an approach to <a class="mw-redirect" href="/wiki/Optimization_(mathematics)" title="Optimization (mathematics)">optimization</a> that restates a multiperiod or multistep optimization problem in recursive form. The key result in dynamic programming is the <a href="/wiki/Bellman_equation" title="Bellman equation">Bellman equation</a>, which writes the value of the optimization problem at an earlier time (or earlier step) in terms of its value at a later time (or later step).</p>
<h2><span class="mw-headline" id="In_computer_science">In computer science</span></h2>
<div class="hatnote" role="note">Main article: <a href="/wiki/Recursion_(computer_science)" title="Recursion (computer science)">Recursion (computer science)</a></div>
<p>A common method of simplification is to divide a problem into subproblems of the same type. As a <a href="/wiki/Computer_programming" title="Computer programming">computer programming</a> technique, this is called <a class="mw-redirect" href="/wiki/Divide_and_conquer_algorithm" title="Divide and conquer algorithm">divide and conquer</a> and is key to the design of many important algorithms. Divide and conquer serves as a top-down approach to problem solving, where problems are solved by solving smaller and smaller instances. A contrary approach is <a href="/wiki/Dynamic_programming" title="Dynamic programming">dynamic programming</a>. This approach serves as a bottom-up approach, where problems are solved by solving larger and larger instances, until the desired size is reached.</p>
<p>A classic example of recursion is the definition of the <a href="/wiki/Factorial" title="Factorial">factorial</a> function, given here in C code:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="kt">unsigned</span> <span class="kt">int</span> <span class="nf">factorial</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="k">return</span> <span class="n">n</span> <span class="o">*</span> <span class="n">factorial</span><span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
<p>The function calls itself recursively on a smaller version of the input (n - 1) and multiplies the result of the recursive call by n, until reaching the <a class="mw-redirect" href="/wiki/Base_case_(recursion)" title="Base case (recursion)">base case</a>, analogously to the mathematical definition of factorial.</p>
<p>Recursion in computer programming is exemplified when a function is defined in terms of simpler, often smaller versions of itself. The solution to the problem is then devised by combining the solutions obtained from the simpler versions of the problem. One example application of recursion is in <a class="mw-redirect" href="/wiki/Parser" title="Parser">parsers</a> for programming languages. The great advantage of recursion is that an infinite set of possible sentences, designs or other data can be defined, parsed or produced by a finite computer program.</p>
<p><a href="/wiki/Recurrence_relation" title="Recurrence relation">Recurrence relations</a> are equations to define one or more sequences recursively. Some specific kinds of recurrence relation can be "solved" to obtain a non-recursive definition.</p>
<p>Use of recursion in an algorithm has both advantages and disadvantages. The main advantage is usually simplicity. The main disadvantage is often that the algorithm may require large amounts of memory if the depth of the recursion is very large.</p>
<h2><span class="mw-headline" id="In_art">In art</span></h2>


<div class="hatnote" role="note">See also: <a href="/wiki/Mathematics_and_art" title="Mathematics and art">Mathematics and art</a> and <a href="/wiki/Infinity_mirror" title="Infinity mirror">Infinity mirror</a></div>
<p>The Russian Doll or <a href="/wiki/Matryoshka_doll" title="Matryoshka doll">Matryoshka Doll</a> is a physical artistic example of the recursive concept.</p>
<p>Recursion has been used in paintings since <a href="/wiki/Giotto" title="Giotto">Giotto</a>'s <i><a href="/wiki/Stefaneschi_Triptych" title="Stefaneschi Triptych">Stefaneschi Triptych</a></i>, made in 1320. Its central panel contains the kneeling figure of Cardinal Stefaneschi, holding up the triptych itself as an offering.</p>
<p><a href="/wiki/M._C._Escher" title="M. C. Escher">M. C. Escher</a>'s <i><a href="/wiki/Print_Gallery_(M._C._Escher)" title="Print Gallery (M. C. Escher)">Print Gallery</a></i> (1956) is a print which depicts a distorted city which contains a gallery which <a class="mw-redirect" href="/wiki/Recursive" title="Recursive">recursively</a> contains the picture, and so <i><a href="/wiki/Ad_infinitum" title="Ad infinitum">ad infinitum</a></i>.</p>
<h2><span class="mw-headline" id="The_recursion_theorem">The recursion theorem</span></h2>
<p>In <a href="/wiki/Set_theory" title="Set theory">set theory</a>, this is a theorem guaranteeing that recursively defined functions exist. Given a set <i>X</i>, an element <i>a</i> of <i>X</i> and a function <span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mi>f</mi>
<mo>:</mo>
<mi>X</mi>
<mo stretchy="false">→<!-- → --></mo>
<mi>X</mi>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle f:X\rightarrow X}</annotation>
</semantics>
</math></span><img alt="f: X \rightarrow X" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/245918678040123f009e350000a38b663951fff8" style="vertical-align: -0.671ex; width:10.842ex; height:2.509ex;"/></span>, the theorem states that there is a unique function <span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mi>F</mi>
<mo>:</mo>
<mrow class="MJX-TeXAtom-ORD">
<mi mathvariant="double-struck">N</mi>
</mrow>
<mo stretchy="false">→<!-- → --></mo>
<mi>X</mi>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle F:\mathbb {N} \rightarrow X}</annotation>
</semantics>
</math></span><img alt="F: \mathbb{N} \rightarrow X" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/cb9b2e4d4c898d2319d2cea22660c03c406f9761" style="vertical-align: -0.338ex; width:11.002ex; height:2.176ex;"/></span> (where <span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mrow class="MJX-TeXAtom-ORD">
<mi mathvariant="double-struck">N</mi>
</mrow>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle \mathbb {N} }</annotation>
</semantics>
</math></span><img alt="\mathbb {N} " aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/fdf9a96b565ea202d0f4322e9195613fb26a9bed" style="vertical-align: -0.338ex; width:1.689ex; height:2.176ex;"/></span> denotes the set of natural numbers including zero) such that</p>

<p>for any natural number <i>n</i>.</p>
<h3><span class="mw-headline" id="Proof_of_uniqueness">Proof of uniqueness</span></h3>
<p>Take two functions <span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mi>F</mi>
<mo>:</mo>
<mrow class="MJX-TeXAtom-ORD">
<mi mathvariant="double-struck">N</mi>
</mrow>
<mo stretchy="false">→<!-- → --></mo>
<mi>X</mi>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle F:\mathbb {N} \rightarrow X}</annotation>
</semantics>
</math></span><img alt="F: \mathbb{N} \rightarrow X" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/cb9b2e4d4c898d2319d2cea22660c03c406f9761" style="vertical-align: -0.338ex; width:11.002ex; height:2.176ex;"/></span> and <span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mi>G</mi>
<mo>:</mo>
<mrow class="MJX-TeXAtom-ORD">
<mi mathvariant="double-struck">N</mi>
</mrow>
<mo stretchy="false">→<!-- → --></mo>
<mi>X</mi>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle G:\mathbb {N} \rightarrow X}</annotation>
</semantics>
</math></span><img alt="G: \mathbb{N} \rightarrow X" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b7ad6ce89f36f7242cda0de98f9645cf7f975b18" style="vertical-align: -0.338ex; width:11.088ex; height:2.176ex;"/></span> such that:</p>

<p>where <i>a</i> is an element of <i>X</i>.</p>
<p>It can be proved by <a href="/wiki/Mathematical_induction" title="Mathematical induction">mathematical induction</a> that <span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mi>F</mi>
<mo stretchy="false">(</mo>
<mi>n</mi>
<mo stretchy="false">)</mo>
<mo>=</mo>
<mi>G</mi>
<mo stretchy="false">(</mo>
<mi>n</mi>
<mo stretchy="false">)</mo>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle F(n)=G(n)}</annotation>
</semantics>
</math></span><img alt="F(n) = G(n)" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/333fb070c367ee695f65924c6c2e6fb63d5edcb1" style="vertical-align: -0.838ex; width:13.168ex; height:2.843ex;"/></span> for all natural numbers <i>n</i>:</p>


<p>By induction, <span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mi>F</mi>
<mo stretchy="false">(</mo>
<mi>n</mi>
<mo stretchy="false">)</mo>
<mo>=</mo>
<mi>G</mi>
<mo stretchy="false">(</mo>
<mi>n</mi>
<mo stretchy="false">)</mo>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle F(n)=G(n)}</annotation>
</semantics>
</math></span><img alt="F(n) = G(n)" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/333fb070c367ee695f65924c6c2e6fb63d5edcb1" style="vertical-align: -0.838ex; width:13.168ex; height:2.843ex;"/></span> for all <span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mi>n</mi>
<mo>∈<!-- ∈ --></mo>
<mrow class="MJX-TeXAtom-ORD">
<mi mathvariant="double-struck">N</mi>
</mrow>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle n\in \mathbb {N} }</annotation>
</semantics>
</math></span><img alt="n\in \mathbb {N} " aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/d059936e77a2d707e9ee0a1d9575a1d693ce5d0b" style="vertical-align: -0.338ex; width:5.945ex; height:2.176ex;"/></span>.</p>
<h3><span class="mw-headline" id="Examples">Examples</span></h3>
<p>Some common recurrence relations are:</p>
<ul>
<li><a class="mw-redirect" href="/wiki/Golden_Ratio" title="Golden Ratio">Golden Ratio</a>: <span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mi>ϕ<!-- ϕ --></mi>
<mo>=</mo>
<mn>1</mn>
<mo>+</mo>
<mo stretchy="false">(</mo>
<mn>1</mn>
<mrow class="MJX-TeXAtom-ORD">
<mo>/</mo>
</mrow>
<mi>ϕ<!-- ϕ --></mi>
<mo stretchy="false">)</mo>
<mo>=</mo>
<mn>1</mn>
<mo>+</mo>
<mo stretchy="false">(</mo>
<mn>1</mn>
<mrow class="MJX-TeXAtom-ORD">
<mo>/</mo>
</mrow>
<mo stretchy="false">(</mo>
<mn>1</mn>
<mo>+</mo>
<mo stretchy="false">(</mo>
<mn>1</mn>
<mrow class="MJX-TeXAtom-ORD">
<mo>/</mo>
</mrow>
<mo stretchy="false">(</mo>
<mn>1</mn>
<mo>+</mo>
<mn>1</mn>
<mrow class="MJX-TeXAtom-ORD">
<mo>/</mo>
</mrow>
<mo>.</mo>
<mo>.</mo>
<mo>.</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">)</mo>
<mo stretchy="false">)</mo>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle \phi =1+(1/\phi )=1+(1/(1+(1/(1+1/...))))}</annotation>
</semantics>
</math></span><img alt="\phi = 1 + (1/\phi) =  1 + (1/(1 + (1/(1 + 1/...))))" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/69d4690170b13ddecd687d239e7ccb8a8437eda6" style="vertical-align: -0.838ex; width:46.772ex; height:2.843ex;"/></span></li>
<li><a href="/wiki/Factorial" title="Factorial">Factorial</a>: <span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mi>n</mi>
<mo>!</mo>
<mo>=</mo>
<mi>n</mi>
<mo stretchy="false">(</mo>
<mi>n</mi>
<mo>−<!-- − --></mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
<mo>!</mo>
<mo>=</mo>
<mi>n</mi>
<mo stretchy="false">(</mo>
<mi>n</mi>
<mo>−<!-- − --></mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
<mo>⋯<!-- ⋯ --></mo>
<mn>1</mn>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle n!=n(n-1)!=n(n-1)\cdots 1}</annotation>
</semantics>
</math></span><img alt="n! = n (n - 1)! = n (n - 1)\cdots 1" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/18e8856ae0afe9a15fe8ed2141e7f6a25bb6530c" style="vertical-align: -0.838ex; width:30.947ex; height:2.843ex;"/></span></li>
<li><a class="mw-redirect" href="/wiki/Fibonacci_numbers" title="Fibonacci numbers">Fibonacci numbers</a>: <span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mi>f</mi>
<mo stretchy="false">(</mo>
<mi>n</mi>
<mo stretchy="false">)</mo>
<mo>=</mo>
<mi>f</mi>
<mo stretchy="false">(</mo>
<mi>n</mi>
<mo>−<!-- − --></mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
<mo>+</mo>
<mi>f</mi>
<mo stretchy="false">(</mo>
<mi>n</mi>
<mo>−<!-- − --></mo>
<mn>2</mn>
<mo stretchy="false">)</mo>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle f(n)=f(n-1)+f(n-2)}</annotation>
</semantics>
</math></span><img alt="f (n) = f (n - 1) + f (n - 2)" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/5292c0129a4ebd0f560bf6b1b3647dc5ac5eda6d" style="vertical-align: -0.838ex; width:27.58ex; height:2.843ex;"/></span></li>
<li><a href="/wiki/Catalan_number" title="Catalan number">Catalan numbers</a>: <span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<msub>
<mi>C</mi>
<mrow class="MJX-TeXAtom-ORD">
<mn>0</mn>
</mrow>
</msub>
<mo>=</mo>
<mn>1</mn>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle C_{0}=1}</annotation>
</semantics>
</math></span><img alt="C_{0}=1" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/8f16d74f9b1af01a229f5b576167e4f1d7969c83" style="vertical-align: -0.671ex; width:7.016ex; height:2.509ex;"/></span>, <span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<msub>
<mi>C</mi>
<mrow class="MJX-TeXAtom-ORD">
<mi>n</mi>
<mo>+</mo>
<mn>1</mn>
</mrow>
</msub>
<mo>=</mo>
<mo stretchy="false">(</mo>
<mn>4</mn>
<mi>n</mi>
<mo>+</mo>
<mn>2</mn>
<mo stretchy="false">)</mo>
<msub>
<mi>C</mi>
<mrow class="MJX-TeXAtom-ORD">
<mi>n</mi>
</mrow>
</msub>
<mrow class="MJX-TeXAtom-ORD">
<mo>/</mo>
</mrow>
<mo stretchy="false">(</mo>
<mi>n</mi>
<mo>+</mo>
<mn>2</mn>
<mo stretchy="false">)</mo>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle C_{n+1}=(4n+2)C_{n}/(n+2)}</annotation>
</semantics>
</math></span><img alt="C_{n+1} = (4n+2)C_n/(n+2)" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0f0927f514faab4d5636046f0371a7839081d1b9" style="vertical-align: -0.838ex; width:27.885ex; height:2.843ex;"/></span></li>
<li>Computing compound <a href="/wiki/Interest" title="Interest">interest</a></li>
<li>The <a href="/wiki/Tower_of_Hanoi" title="Tower of Hanoi">Tower of Hanoi</a></li>
<li><a href="/wiki/Ackermann_function" title="Ackermann function">Ackermann function</a></li>
</ul>
<h2><span class="mw-headline" id="See_also">See also</span></h2>
<div class="div-col columns column-width" style="-moz-column-width: 25em; -webkit-column-width: 25em; column-width: 25em;">
<ul>
<li><a href="/wiki/Corecursion" title="Corecursion">Corecursion</a></li>
<li><a href="/wiki/Course-of-values_recursion" title="Course-of-values recursion">Course-of-values recursion</a></li>
<li><a href="/wiki/Digital_infinity" title="Digital infinity">Digital infinity</a></li>
<li><a class="mw-redirect" href="/wiki/Fixed_point_combinator" title="Fixed point combinator">Fixed point combinator</a></li>
<li><a href="/wiki/Infinite_loop" title="Infinite loop">Infinite loop</a></li>
<li><a href="/wiki/Infinitism" title="Infinitism">Infinitism</a></li>
<li><a href="/wiki/Iterated_function" title="Iterated function">Iterated function</a></li>
<li><a href="/wiki/Mise_en_abyme" title="Mise en abyme">Mise en abyme</a></li>
<li class="mw-empty-elt"></li>
<li><a class="mw-redirect" href="/wiki/Reentrant_(subroutine)" title="Reentrant (subroutine)">Reentrant (subroutine)</a></li>
<li><a href="/wiki/Self-reference" title="Self-reference">Self-reference</a></li>
<li><a href="/wiki/Strange_loop" title="Strange loop">Strange loop</a></li>
<li><a class="mw-redirect" href="/wiki/Tail_recursion" title="Tail recursion">Tail recursion</a></li>
<li><a href="/wiki/Tupper%27s_self-referential_formula" title="Tupper's self-referential formula">Tupper's self-referential formula</a></li>
<li><a href="/wiki/Turtles_all_the_way_down" title="Turtles all the way down">Turtles all the way down</a></li>
<li><a href="/wiki/Infinite_compositions_of_analytic_functions" title="Infinite compositions of analytic functions">Infinite compositions of analytic functions</a></li>
</ul>
</div>
<h2></h2>
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><cite class="citation book">Pinker, Steven (1994). <i>The Language Instinct</i>. William Morrow.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.aufirst=Steven&amp;rft.aulast=Pinker&amp;rft.btitle=The+Language+Instinct&amp;rft.date=1994&amp;rft.genre=book&amp;rft.pub=William+Morrow&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><cite class="citation journal">Pinker, Steven; Jackendoff, Ray (2005). "The faculty of language: What's so special about it?". <i>Cognition</i>. <b>95</b> (2): 201–236. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a class="external text" href="//dx.doi.org/10.1016%2Fj.cognition.2004.08.004" rel="nofollow">10.1016/j.cognition.2004.08.004</a>. <a class="mw-redirect" href="/wiki/PubMed_Identifier" title="PubMed Identifier">PMID</a> <a class="external text" href="//www.ncbi.nlm.nih.gov/pubmed/15694646" rel="nofollow">15694646</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.atitle=The+faculty+of+language%3A+What%27s+so+special+about+it%3F&amp;rft.aufirst=Steven&amp;rft.au=Jackendoff%2C+Ray&amp;rft.aulast=Pinker&amp;rft.date=2005&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1016%2Fj.cognition.2004.08.004&amp;rft_id=info%3Apmid%2F15694646&amp;rft.issue=2&amp;rft.jtitle=Cognition&amp;rft.pages=201-236&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=95"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text"><cite class="citation journal">Nevins, Andrew; Pesetsky, David; Rodrigues, Cilene (2009). <a class="external text" href="http://web.mit.edu/linguistics/people/faculty/pesetsky/Nevins_Pesetsky_Rodrigues_2_Evidence_and_Argumentation_Reply_to_Everett.pdf" rel="nofollow">"Evidence and argumentation: A reply to Everett (2009)"</a> <span style="font-size:85%;">(PDF)</span>. <i>Language</i>. <b>85</b> (3): 671–681. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a class="external text" href="//dx.doi.org/10.1353%2Flan.0.0140" rel="nofollow">10.1353/lan.0.0140</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.atitle=Evidence+and+argumentation%3A+A+reply+to+Everett+%282009%29&amp;rft.aufirst=Andrew&amp;rft.aulast=Nevins&amp;rft.au=Pesetsky%2C+David&amp;rft.au=Rodrigues%2C+Cilene&amp;rft.date=2009&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fweb.mit.edu%2Flinguistics%2Fpeople%2Ffaculty%2Fpesetsky%2FNevins_Pesetsky_Rodrigues_2_Evidence_and_Argumentation_Reply_to_Everett.pdf&amp;rft_id=info%3Adoi%2F10.1353%2Flan.0.0140&amp;rft.issue=3&amp;rft.jtitle=Language&amp;rft.pages=671-681&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=85"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-Drucker2008-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-Drucker2008_4-0">^</a></b></span> <span class="reference-text"><cite class="citation book">Drucker, Thomas (4 January 2008). <a class="external text" href="https://books.google.com/books?id=R70M4zsVgREC&amp;pg=PA110" rel="nofollow"><i>Perspectives on the History of Mathematical Logic</i></a>. Springer Science &amp; Business Media. p. 110. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/978-0-8176-4768-1" title="Special:BookSources/978-0-8176-4768-1">978-0-8176-4768-1</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.aufirst=Thomas&amp;rft.aulast=Drucker&amp;rft.btitle=Perspectives+on+the+History+of+Mathematical+Logic&amp;rft.date=2008-01-04&amp;rft.genre=book&amp;rft_id=https%3A%2F%2Fbooks.google.com%2Fbooks%3Fid%3DR70M4zsVgREC%26pg%3DPA110&amp;rft.isbn=978-0-8176-4768-1&amp;rft.pages=110&amp;rft.pub=Springer+Science+%26+Business+Media&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text">Barbara Partee and Mats Rooth. 1983. In Rainer Bäuerle et al., <i>Meaning, Use, and Interpretation of Language</i>. Reprinted in Paul Portner and Barbara Partee, eds. 2002. <i>Formal Semantics: The Essential Readings</i>. Blackwell.</span></li>
<li id="cite_note-Hunter-6"><span class="mw-cite-backlink">^ <a href="#cite_ref-Hunter_6-0"></a> <a href="#cite_ref-Hunter_6-1"></a></span> <span class="reference-text"><cite class="citation book">Hunter, David (2011). <a class="external text" href="https://books.google.com/books?id=kuwhTxCVovQC&amp;dq=recursion+joke&amp;source=gbs_navlinks_s" rel="nofollow"><i>Essentials of Discrete Mathematics</i></a>. Jones and Bartlett. p. 494.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.aufirst=David&amp;rft.aulast=Hunter&amp;rft.btitle=Essentials+of+Discrete+Mathematics&amp;rft.date=2011&amp;rft.genre=book&amp;rft_id=https%3A%2F%2Fbooks.google.com%2Fbooks%3Fid%3DkuwhTxCVovQC%26dq%3Drecursion%2Bjoke%26source%3Dgbs_navlinks_s&amp;rft.pages=494&amp;rft.pub=Jones+and+Bartlett&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-7"><span class="mw-cite-backlink"><b><a href="#cite_ref-7">^</a></b></span> <span class="reference-text"><cite class="citation web">Tang, Daisy. <a class="external text" href="http://www.cpp.edu/~ftang/courses/CS240/lectures/recursion.htm" rel="nofollow">"Recursion"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">24 September</span> 2015</span>. <q>More examples of recursion: Russian Matryoshka dolls. Each doll is made of solid wood or is hollow and contains another Matryoshka doll inside it.</q></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.aufirst=Daisy&amp;rft.aulast=Tang&amp;rft.btitle=Recursion&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.cpp.edu%2F~ftang%2Fcourses%2FCS240%2Flectures%2Frecursion.htm&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8">^</a></b></span> <span class="reference-text"><cite class="citation web"><a class="external text" href="http://mv.vatican.va/3_EN/pages/PIN/PIN_Sala02_03.html" rel="nofollow">"Giotto di Bondone and assistants: Stefaneschi triptych"</a>. The Vatican<span class="reference-accessdate">. Retrieved <span class="nowrap">16 September</span> 2015</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.btitle=Giotto+di+Bondone+and+assistants%3A+Stefaneschi+triptych&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fmv.vatican.va%2F3_EN%2Fpages%2FPIN%2FPIN_Sala02_03.html&amp;rft.pub=The+Vatican&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9">^</a></b></span> <span class="reference-text"><cite class="citation web">Cooper, Jonathan (5 September 2007). <a class="external text" href="http://www.doctordada.com/art/art-and-mathematics/" rel="nofollow">"Art and Mathematics"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">5 September</span> 2015</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.aufirst=Jonathan&amp;rft.aulast=Cooper&amp;rft.btitle=Art+and+Mathematics&amp;rft.date=2007-09-05&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.doctordada.com%2Fart%2Fart-and-mathematics%2F&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
</ol>
<h2><span class="mw-headline" id="Bibliography">Bibliography</span></h2>
<div class="refbegin" style="">
<ul>
<li><cite class="citation journal"><a href="/wiki/Edsger_W._Dijkstra" title="Edsger W. Dijkstra">Dijkstra, Edsger W.</a> (1960). "Recursive Programming". <i>Numerische Mathematik</i>. <b>2</b> (1): 312–318. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a class="external text" href="//dx.doi.org/10.1007%2FBF01386232" rel="nofollow">10.1007/BF01386232</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.atitle=Recursive+Programming&amp;rft.aufirst=Edsger+W.&amp;rft.aulast=Dijkstra&amp;rft.date=1960&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1007%2FBF01386232&amp;rft.issue=1&amp;rft.jtitle=Numerische+Mathematik&amp;rft.pages=312-318&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=2"><span style="display:none;"> </span></span></li>
<li><cite class="citation book">Johnsonbaugh, Richard (2004). <i>Discrete Mathematics</i>. Prentice Hall. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-13-117686-2" title="Special:BookSources/0-13-117686-2">0-13-117686-2</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.au=Johnsonbaugh%2C+Richard&amp;rft.btitle=Discrete+Mathematics&amp;rft.date=2004&amp;rft.genre=book&amp;rft.isbn=0-13-117686-2&amp;rft.pub=Prentice+Hall&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book"><a href="/wiki/Douglas_Hofstadter" title="Douglas Hofstadter">Hofstadter, Douglas</a> (1999). <i>Gödel, Escher, Bach: an Eternal Golden Braid</i>. Basic Books. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-465-02656-7" title="Special:BookSources/0-465-02656-7">0-465-02656-7</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.au=Hofstadter%2C+Douglas&amp;rft.btitle=G%C3%B6del%2C+Escher%2C+Bach%3A+an+Eternal+Golden+Braid&amp;rft.date=1999&amp;rft.genre=book&amp;rft.isbn=0-465-02656-7&amp;rft.pub=Basic+Books&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book"><a href="/wiki/Joseph_R._Shoenfield" title="Joseph R. Shoenfield">Shoenfield, Joseph R.</a> (2000). <i>Recursion Theory</i>. A K Peters Ltd. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/1-56881-149-7" title="Special:BookSources/1-56881-149-7">1-56881-149-7</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.au=Shoenfield%2C+Joseph+R.&amp;rft.btitle=Recursion+Theory&amp;rft.date=2000&amp;rft.genre=book&amp;rft.isbn=1-56881-149-7&amp;rft.pub=A+K+Peters+Ltd&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book">Causey, Robert L. (2001). <i>Logic, Sets, and Recursion</i>. Jones &amp; Bartlett. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-7637-1695-2" title="Special:BookSources/0-7637-1695-2">0-7637-1695-2</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.au=Causey%2C+Robert+L.&amp;rft.btitle=Logic%2C+Sets%2C+and+Recursion&amp;rft.date=2001&amp;rft.genre=book&amp;rft.isbn=0-7637-1695-2&amp;rft.pub=Jones+%26+Bartlett&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book">Cori, Rene; Lascar, Daniel; Pelletier, Donald H. (2001). <i>Recursion Theory, Gödel's Theorems, Set Theory, Model Theory</i>. Oxford University Press. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-19-850050-5" title="Special:BookSources/0-19-850050-5">0-19-850050-5</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.au=Cori%2C+Rene&amp;rft.au=Lascar%2C+Daniel&amp;rft.au=Pelletier%2C+Donald+H.&amp;rft.btitle=Recursion+Theory%2C+G%C3%B6del%27s+Theorems%2C+Set+Theory%2C+Model+Theory&amp;rft.date=2001&amp;rft.genre=book&amp;rft.isbn=0-19-850050-5&amp;rft.pub=Oxford+University+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book"><a href="/wiki/Jon_Barwise" title="Jon Barwise">Barwise, Jon</a>; Moss, Lawrence S. (1996). <i>Vicious Circles</i>. Stanford Univ Center for the Study of Language and Information. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-19-850050-5" title="Special:BookSources/0-19-850050-5">0-19-850050-5</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.au=Barwise%2C+Jon&amp;rft.au=Moss%2C+Lawrence+S.&amp;rft.btitle=Vicious+Circles&amp;rft.date=1996&amp;rft.genre=book&amp;rft.isbn=0-19-850050-5&amp;rft.pub=Stanford+Univ+Center+for+the+Study+of+Language+and+Information&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span> - offers a treatment of <a href="/wiki/Corecursion" title="Corecursion">corecursion</a>.</li>
<li><cite class="citation book">Rosen, Kenneth H. (2002). <i>Discrete Mathematics and Its Applications</i>. McGraw-Hill College. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-07-293033-0" title="Special:BookSources/0-07-293033-0">0-07-293033-0</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.au=Rosen%2C+Kenneth+H.&amp;rft.btitle=Discrete+Mathematics+and+Its+Applications&amp;rft.date=2002&amp;rft.genre=book&amp;rft.isbn=0-07-293033-0&amp;rft.pub=McGraw-Hill+College&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book">Cormen, Thomas H., Charles E. Leiserson, Ronald L. Rivest, Clifford Stein (2001). <i>Introduction to Algorithms</i>. Mit Pr. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-262-03293-7" title="Special:BookSources/0-262-03293-7">0-262-03293-7</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.au=Cormen%2C+Thomas+H.%2C+Charles+E.+Leiserson%2C+Ronald+L.+Rivest%2C+Clifford+Stein&amp;rft.btitle=Introduction+to+Algorithms&amp;rft.date=2001&amp;rft.genre=book&amp;rft.isbn=0-262-03293-7&amp;rft.pub=Mit+Pr&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span> <span class="citation-comment" style="display:none; color:#33aa33">CS1 maint: Multiple names: authors list (<a href="/wiki/Category:CS1_maint:_Multiple_names:_authors_list" title="Category:CS1 maint: Multiple names: authors list">link</a>)</span></li>
<li><cite class="citation book">Kernighan, B.; Ritchie, D. (1988). <i>The C programming Language</i>. Prentice Hall. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-13-110362-8" title="Special:BookSources/0-13-110362-8">0-13-110362-8</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.au=Kernighan%2C+B.&amp;rft.au=Ritchie%2C+D.&amp;rft.btitle=The+C+programming+Language&amp;rft.date=1988&amp;rft.genre=book&amp;rft.isbn=0-13-110362-8&amp;rft.pub=Prentice+Hall&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book">Stokey, Nancy,; Robert Lucas; Edward Prescott (1989). <i>Recursive Methods in Economic Dynamics</i>. Harvard University Press. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-674-75096-9" title="Special:BookSources/0-674-75096-9">0-674-75096-9</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.au=Edward+Prescott&amp;rft.au=Robert+Lucas&amp;rft.au=Stokey%2C+Nancy%2C&amp;rft.btitle=Recursive+Methods+in+Economic+Dynamics&amp;rft.date=1989&amp;rft.genre=book&amp;rft.isbn=0-674-75096-9&amp;rft.pub=Harvard+University+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span> <span class="citation-comment" style="display:none; color:#33aa33">CS1 maint: Multiple names: authors list (<a href="/wiki/Category:CS1_maint:_Multiple_names:_authors_list" title="Category:CS1 maint: Multiple names: authors list">link</a>)</span></li>
<li><cite class="citation book">Hungerford (1980). <i>Algebra</i>. Springer. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/978-0-387-90518-1" title="Special:BookSources/978-0-387-90518-1">978-0-387-90518-1</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursion&amp;rft.au=Hungerford&amp;rft.btitle=Algebra&amp;rft.date=1980&amp;rft.genre=book&amp;rft.isbn=978-0-387-90518-1&amp;rft.pub=Springer&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span>, first chapter on set theory.</li>
</ul>
</div>
<h2><span class="mw-headline" id="External_links">External links</span></h2>

<ul>
<li><a class="external text" href="http://www.freenetpages.co.uk/hp/alan.gauld/tutrecur.htm" rel="nofollow">Recursion</a> - tutorial by Alan Gauld</li>
<li><a class="external text" href="http://amitksaha.files.wordpress.com/2009/05/recursion-primer.pdf" rel="nofollow">A Primer on Recursion</a>- contains pointers to recursion in Formal Languages, Linguistics, Math and Computer Science</li>
<li><a class="external text" href="http://research.swtch.com/2010/03/zip-files-all-way-down.html" rel="nofollow">Zip Files All The Way Down</a></li>
<li><a class="external text" href="http://www.ucl.ac.uk/psychlangsci/staff/linguistics-staff/nevins-publications/npr09b" rel="nofollow">Nevins, Andrew and David Pesetsky and Cilene Rodrigues. Evidence and Argumentation: A Reply to Everett (2009). Language 85.3: 671--681 (2009)</a></li>
</ul>


<!-- Saved in parser cache with key enwiki:pcache:idhash:25407-0!*!0!!en!4!*!math=5 and timestamp 20161031000644 and revision id 743138450
 -->
<noscript><img alt="" height="1" src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" style="border: none; position: absolute;" title="" width="1"/></noscript></div>